* 自分で考えてみよう

この問題は有向グラフを構成して、そのグラフが１つに連結するかどうか調べろと言っているのではないか。
そして有向グラフが単純グラフなら yes そうではないなら no という答えにはならないかな？
ああ、いや、そんな簡単な話ではないな。単純グラフではなくとも

a < b
a < c
b < c

みたいな情報があれば順序づけ可能だからもっと工夫がいる。
辺の付け替えを適宜実行していって、単純グラフを構成するという感じか。

* 模範解答

https://atcoder.jp/contests/abc291/editorial/5839

トポロジカルソートを使うらしい。
https://hcpc-hokudai.github.io/archive/graph_topological_sort_001.pdf
https://ja.wikipedia.org/wiki/%E3%83%88%E3%83%9D%E3%83%AD%E3%82%B8%E3%82%AB%E3%83%AB%E3%82%BD%E3%83%BC%E3%83%88

トポロジカルソートはライブラリで足りるのはわかった。
問題ではトポロジカル順序が一意であることが課題になっている。
次に選ぶ頂点が常に一意であるならトポロジカル順序は固定となる。
この用途だと tarjan のアルゴリズムはちょっと使いにくいので tsort ライブラリは残念ながら使えない…。

たとえば

A3 < A1
A2 < A3

グラフは A2 ← A3 ← A1 となる。
なら A = [3, 1, 2]

** 「G のトポロジカルソートが存在する ⇔ G が DAG である」 の証明

「G のトポロジカルソートが存在する → G が DAG である」ことの証明

G のトポロジカルソートが存在する
→ 仮に閉路 C があるとする
→ 閉路 C に対して i < j が成立するようなラベル付は存在しない。
背理法により、閉路 C は存在しない

「G が DAG である → G のトポロジカルソートが存在する」ことの証明
G のトポロジカルソートを構成するアルゴリズムが存在する。

上記の二つから「G のトポロジカルソートが存在する ⇔ G が DAG である」といえる。
