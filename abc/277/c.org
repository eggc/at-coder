* 解き方
はしごを使って探索する。
行けるところがグラフで決まっているからDFSで計算できるはずだ。
訪問済みのところを再訪問する必要はない。
全探索して一番高い値になればいいけど…。
20000 件の探索。行き場が20000件あったとしてもそこまで重いとは感じない。

1. 1 からは ladder[1] に行ける
2. n から行けるのは ladder[n]
3. n+1 から行けるのは ladder[n+1]

これを使うと帰納法によって 1 から到達可能な場所全部がリストアップできる。

考え方はあってそうなんだけど LTE と WA になってるからなにか見落としがある。
あーそうか。max とってるのはダメなのかな？　いや、そんなことないか

* とりあえず駄目なケースを探そう

1 3
3 2
2 10

こんなケースの探索を考えてみる

1 から行けるのは 3 だけ。
3 から行けるのは 2 だけ。
2 から行けるのは 10 だけ。

なのでこれは正しく解答できる。

1 10
1 11
2 6
10 2
11 2


こんな感じのやつがあったとする

1 - 10 - 2 - 6 => 10
  - 11 - 2 => 11
1 => 11

で正しく回答できる。

1 10
11 10

これが解けなかったので改善

* 計算時間オーバーになる原因

1 2
2 1

みたいな閉路があったらどうか？　いや対策してる。

1 2
1 3
1 4
1 5
1 6
2 3
2 4
2 5
2 6

こんな感じで嫌がらせみたいな組み合わせがある場合、無駄な計算をたくさんしてしまう。
今キューに乗ってるのは追加しないようにするとかやればいいのかな。
