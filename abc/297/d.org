* 3 8

の例

|   A |   B |
|-----+-----|
|   3 |   8 |
|   3 | 8-3 |
|   3 |   5 |
|   3 | 5-3 |
|   3 |   2 |
| 3-2 |   2 |
|   1 |   2 |
|   1 | 2-1 |
|   1 |   1 |

4step かかる。
計算量ははっきり言ってよくわからないが仮に 1/2 になり続けるとしたら
log 2 10-18 で普通に計算してもいいかもしれない。
ただ現実には 1 ずつしか減らせないケースもある。
A = 1 B = 10000000 とか。そうなると O(n) になる。

* 計算量を減らす

A < B と固定する。
A = 1 になったら残りは B-1 で直ちに終わりにできる。
A = 2 になったら B が偶数か、奇数かで分岐する。
B が偶数なら (B/2)-1, 奇数なら (B/2).floor が答えになる。

* 掛け算にする

A が B の k 倍だったら k 回は引き算を省略できる
例

A = 10, B = 1008    B/A = 100 あまり 8
A = 8,  B = 10      B/A = 1 あまり 2
A = 2,  B = 8       B/A = 4 あまり 0
A = 2,  B = 2

合計数 104 step で解決

そんな感じでやると1回の操作で 1/2 よりは減らせる気がする。
