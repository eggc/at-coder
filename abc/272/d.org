* 方針

盤面を探索して最小経路を探すので幅優先探索を使うのだろう

** 到達可能性

マスは 400x400 なので最悪でも 160,000 ステップ消費すれば到達できるかどうかわかる

** 移動可能なマスはどうやって導く？

(i,j) から √2 へ移動できるとしたら

Math.hypot(i-k, j-l) = √2 を満たす (k,l) へ移動可能

ルートは取り払っていいから

(i-k)^2 + (j-l)^2 = 2 を満たすものを探す

0,0 が起点だから

k^2 + l^2 = M

を計算する。

とりうる k,l は 160,000 種類あるのでデタラメに探しても見つからない

まず k = -400 と置いたときの l は計算可能なので計算してみて l が整数になるかチェック
k を 1 ずつ増加させながらチェックすれば最大 800 個の組み合わせで到達可能な地点を発見できる

とすると

-400^2 + l^2 = M

l^2 = M - 400^2

からスタートする

l = sqrt(M - 400^2)

そしてルートの中が負数になったときは計算失敗でいい

これ自体はとても高いコストではあるけど一旦正常な k, l を発見できればその定数は使い続けられる

** 出力すべきもの

マップそのものを出力する
マップがすべて埋まってればそれ自体

そうじゃないときは -1 で終わるらしい

探索終了の条件はないということか。キュー全て消化するまで走る
