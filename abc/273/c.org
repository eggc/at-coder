* 問題の整理：例題

A[i] より大きい数の種類を weight(i) と呼ぶことにしよう。

A = 2 7 1 8 2 8

まず

A[0] = 2

である。これよりも大きい数は 7 8 の二種類である。
よって

weight(0) = 2

同じように繰り返していくと下記のようになる。

weight(1) = 1
weight(2) = 3
weight(3) = 0
weight(4) = 2
weight(5) = 0

最後に

K = 0 となるのは weight(3), weight(5) の2種類だから

K[0] = 2

同じようにして繰り返していくと

K[1] = 1
K[2] = 1
K[3] = 1
K[4] = 0
K[5] = 0
...

* 素直に解くと計算量はどうなる

数列の長さを A と書くことにする。
1個の weight の計算が O(A) かかる。
そしてweight の集計が O(A) かかる。

よって 2重ループでかけそうに見える。
しかし N は 20000 までなのでこれを2重ループするので十分行ける気がする。
しかし uniq かどうかチェックしないといけないのでそれはそれで遅いと思う。

* 問題を簡単に変換する

出力すべき答え K はグループ化されていて i は問われてない。
A をソート、ユニークして問題を小さくできる。
A[i] より大きい数は (A[i+1]..A[N-1]) なので

weight = (N-1) - (i+1)
